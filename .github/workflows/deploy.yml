name: Deploy Multi-Container App to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-central-1
  EB_APPLICATION_NAME: kviz-portfolio
  EB_ENVIRONMENT_NAME: Kviz-portfolio-env
  # Kreirat ćemo jedinstveni S3 bucket za svaki deploy da izbjegnemo konflikte
  S3_BUCKET: "eb-deployment-kviz-${{ github.run_id }}"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # 1. Preuzimanje koda
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Prijava na AWS koristeći OIDC (ovo radi savršeno)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::410293310465:role/github-kvizapp-role # Tvoj ARN
          aws-region: ${{ env.AWS_REGION }}

      # 3. Kreiranje ZIP arhive
      - name: Create ZIP deployment package
        run: zip -r deploy.zip . -x ".git/*"

      # 4. Upload ZIP-a na privremeni S3 Bucket
      - name: Upload package to S3
        run: |
          aws s3 mb s3://${{ env.S3_BUCKET }} --region ${{ env.AWS_REGION }}
          aws s3 cp deploy.zip s3://${{ env.S3_BUCKET }}/

      # 5. Kreiranje nove verzije aplikacije u Elastic Beanstalku
      - name: Create new Elastic Beanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --version-label "ver-${{ github.sha }}" \
            --source-bundle S3Bucket="${{ env.S3_BUCKET }}",S3Key="deploy.zip"

      # 6. Deploy nove verzije na tvoje okruženje
      - name: Deploy new version
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --version-label "ver-${{ github.sha }}"

      # 7. Čišćenje S3 bucketa nakon deploya (uvijek se izvršava)
      - name: Cleanup S3 bucket
        if: always()
        run: aws s3 rb s3://${{ env.S3_BUCKET }} --force
